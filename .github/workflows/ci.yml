name: CI

on:
  push:
    branches:
      - main
      - releases/*
  pull_request:
    branches:
      - main

jobs:
  pretest:
    name: Pretest
    runs-on: ubuntu-latest
    container:
      image: alvrme/alpine-android:android-33-jdk17
    strategy:
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            cache/caches/
            cache/notifications/
            cache/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run pretest
        run: ./gradlew --build-cache --gradle-user-home cache/ ${MODULE}:check

    env:
      MODULE: ${{ github.event.inputs.module }}

    timeout-minutes: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: alvrme/alpine-android:android-33-jdk17
    strategy:
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            cache/caches/
            cache/notifications/
            cache/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Display system info
        run: |
          free -m | grep -v "Swap" # RAM
          df -h| grep -E "Filesystem|overlay" # storage

      - name: Build project
        run: ./gradlew --build-cache --gradle-user-home cache/ ${MODULE}:assemble

      - name: Archive built Js
        uses: actions/upload-artifact@v2
        with:
          name: coinmarket-jar
          path: ${MODULE}/build/dist/js/productionLibrary/

    env:
      MODULE: ${{ github.event.inputs.module }}

    timeout-minutes: 30
